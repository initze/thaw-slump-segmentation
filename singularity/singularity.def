BootStrap: docker
From: nvidia/cuda:11.8.0-cudnn8-devel-ubuntu20.04
%help
   This Singularity definition contains a GPU-Nvidia, Gpu with PyTorch installation

%setup
   export PACKAGES_TMP=/tmp/aicore
   rm -fr $PACKAGES_TMP
   mkdir -p $PACKAGES_TMP

%post

   apt-get update -y
   DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		python3.7 \
		python3-tk \
		python3-pip \
		python3-distutils \
		python3-setuptools \
		git \
		python3-opencv \
		nano
   
   #install gdal	
   apt-get update -y
   DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		gdal-bin \
		python3-gdal \
		libgdal-dev
   
   # all the python packages you need:
   python3 -m pip install --upgrade pip
   pip3 install torch==2.1.1 torchvision --index-url https://download.pytorch.org/whl/cu118
   pip3 install nvidia-pyindex cuda-python
   pip3 install cucim-cu11
   pip3 install torchvision efficientnet-pytorch==0.7.1 wandb pretrainedmodels albumentations timm ipython numpy matplotlib xarray einops
   pip3 install geopandas gdal rasterio rioxarray pyproj earthengine-api geedim geemap  eemont
   pip3 joblib==1.3 scikit-image h5py iPython cython tqdm PyYAML pathlib docopt pandas rtree yacs tqdm requests 
   pip3 install opencv-python
   pip3 install pyproj
   
   pip3 install opencv-python
   pip3 install pyproj==2.6.1.post1

   #pip3 install streamlit
   git clone https://github.com/initze/thaw-slump-segmentation $PACKAGES_TMP


%environment
   #export LC_ALL=C
   #export AIC_PATH=/ai-core/
   alias python=python3

%runscript
   cd /thaw-slump-segmentation
   #exec python3 <your script to execute when running the container> $@ ($@ is a veriable to use with yout python script, e.g. path to folder of input data)
   #example of my implementation:
   #exec python3 inference.py $@
   #exec python3 post-processing.py $@

%labels
   Author Ingmar Nitze, Celia Baumhoer
